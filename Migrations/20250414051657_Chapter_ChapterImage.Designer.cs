// <auto-generated />
using System;
using K21CNT2_NguyenHaiDang_2110900067_DATN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace K21CNT2_NguyenHaiDang_2110900067_DATN.Migrations
{
    [DbContext(typeof(K21CNT2_NguyenHaiDang_2110900067_DATNContext))]
    [Migration("20250414051657_Chapter_ChapterImage")]
    partial class Chapter_ChapterImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ChapterImageModel", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrls")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("ChapterId");

                    b.ToTable("ChapterImages");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ChapterModel", b =>
                {
                    b.Property<int>("ChapterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChapterId"));

                    b.Property<int>("ChapterNumber")
                        .HasColumnType("int");

                    b.Property<decimal?>("Coin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ComicId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.HasKey("ChapterId");

                    b.HasIndex("ComicId");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ComicGenreModel", b =>
                {
                    b.Property<int>("ComicId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("ComicGenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComicGenreId"));

                    b.HasKey("ComicId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("ComicGenres");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ComicModel", b =>
                {
                    b.Property<int>("ComicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComicId"));

                    b.Property<string>("ComicAuthor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ComicDescription")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComicImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComicName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("ComicId");

                    b.HasIndex("TeamId");

                    b.ToTable("Comics");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.FrameModel", b =>
                {
                    b.Property<int>("FrameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FrameId"));

                    b.Property<int?>("Coin")
                        .HasColumnType("int");

                    b.Property<string>("FrameImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrameName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsFree")
                        .HasColumnType("bit");

                    b.HasKey("FrameId");

                    b.ToTable("Frames");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.GenreModel", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<int?>("ComicModelComicId")
                        .HasColumnType("int");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.HasIndex("ComicModelComicId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.LevelMappingModel", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("LevelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PointsRequired")
                        .HasColumnType("int");

                    b.HasKey("LevelId");

                    b.HasIndex("LevelTypeId");

                    b.ToTable("LevelMappings");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.LevelTypeModel", b =>
                {
                    b.Property<int>("LevelTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelTypeId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("LevelTypeId");

                    b.ToTable("LevelTypes");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.RoleModel", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.TeamMemberModel", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<bool>("IsLeader")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.HasIndex("TeamId");

                    b.HasIndex("UserId");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.TranslationTeamModel", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalEarnings")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TeamId");

                    b.ToTable("TranslationTeams");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.UserFrameModel", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("FrameId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "FrameId");

                    b.HasIndex("FrameId");

                    b.ToTable("UserFrames");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<decimal>("Coin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CoverUserImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrentFrameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<int?>("LevelTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.HasIndex("CurrentFrameId");

                    b.HasIndex("LevelTypeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ChapterImageModel", b =>
                {
                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ChapterModel", "Chapter")
                        .WithMany("ChapterImages")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ChapterModel", b =>
                {
                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ComicModel", "Comic")
                        .WithMany("Chapters")
                        .HasForeignKey("ComicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comic");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ComicGenreModel", b =>
                {
                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ComicModel", "Comic")
                        .WithMany("ComicGenres")
                        .HasForeignKey("ComicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Comic_ComicGenres");

                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.GenreModel", "Genre")
                        .WithMany("ComicGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Genre_ComicGenres");

                    b.Navigation("Comic");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ComicModel", b =>
                {
                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.TranslationTeamModel", "TranslationTeam")
                        .WithMany("Comics")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("TranslationTeam");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.GenreModel", b =>
                {
                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ComicModel", null)
                        .WithMany("AvailableGenres")
                        .HasForeignKey("ComicModelComicId");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.LevelMappingModel", b =>
                {
                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.LevelTypeModel", "LevelType")
                        .WithMany("LevelMappings")
                        .HasForeignKey("LevelTypeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("LevelType");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.TeamMemberModel", b =>
                {
                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.TranslationTeamModel", "TranslationTeam")
                        .WithMany("Members")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.UserModel", "User")
                        .WithMany("Members")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TranslationTeam");

                    b.Navigation("User");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.UserFrameModel", b =>
                {
                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.FrameModel", "Frame")
                        .WithMany("UserFrames")
                        .HasForeignKey("FrameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.UserModel", "User")
                        .WithMany("UserFrames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Frame");

                    b.Navigation("User");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.UserModel", b =>
                {
                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.FrameModel", "CurrentFrame")
                        .WithMany()
                        .HasForeignKey("CurrentFrameId");

                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.LevelTypeModel", "LevelType")
                        .WithMany("Users")
                        .HasForeignKey("LevelTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.RoleModel", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentFrame");

                    b.Navigation("LevelType");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ChapterModel", b =>
                {
                    b.Navigation("ChapterImages");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.ComicModel", b =>
                {
                    b.Navigation("AvailableGenres");

                    b.Navigation("Chapters");

                    b.Navigation("ComicGenres");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.FrameModel", b =>
                {
                    b.Navigation("UserFrames");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.GenreModel", b =>
                {
                    b.Navigation("ComicGenres");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.LevelTypeModel", b =>
                {
                    b.Navigation("LevelMappings");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.RoleModel", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.TranslationTeamModel", b =>
                {
                    b.Navigation("Comics");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("K21CNT2_NguyenHaiDang_2110900067_DATN.Models.UserModel", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("UserFrames");
                });
#pragma warning restore 612, 618
        }
    }
}
